class CycleService {
    constructor(database) {
        this.db = database;
        this.cycles = [
            {
                id: 1,
                name: '–°–†–¶1',
                direction: '–¢—Ä–æ–µ–±–æ—Ä—å–µ',
                gender: 'male',
                level: 'II —Ä–∞–∑—Ä—è–¥ ‚Äì –ö–ú–°',
                period: '–°–∏–ª–æ–≤–æ–π',
                weightMin: 80,
                weightMax: null,
                weightHeightRatio: '–ù–æ—Ä–º–∞–ª—å–Ω–æ–µ',
                additionalInfo: '',
                exercises: [
                    { name: '–ü—Ä–∏—Å–µ–¥–∞–Ω–∏—è', sets: 4, reps: '5-8', intensity: '80-90%' },
                    { name: '–ñ–∏–º –ª–µ–∂–∞', sets: 4, reps: '5-8', intensity: '80-90%' },
                    { name: '–°—Ç–∞–Ω–æ–≤–∞—è —Ç—è–≥–∞', sets: 3, reps: '5-8', intensity: '80-90%' },
                    { name: '–ñ–∏–º —Å—Ç–æ—è', sets: 3, reps: '6-10', intensity: '70-80%' },
                    { name: '–ü–æ–¥—Ç—è–≥–∏–≤–∞–Ω–∏—è', sets: 3, reps: '6-12', intensity: '–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –≤–µ—Å' }
                ]
            },
            {
                id: 2,
                name: '–°–†–¶2',
                direction: '–¢—Ä–æ–µ–±–æ—Ä—å–µ',
                gender: 'male',
                level: '–ö–ú–° ‚Äì –ú–°',
                period: '–°–∏–ª–æ–≤–æ–π',
                weightMin: 80,
                weightMax: null,
                weightHeightRatio: '–ù–æ—Ä–º–∞–ª—å–Ω–æ–µ',
                additionalInfo: '',
                exercises: [
                    { name: '–ü—Ä–∏—Å–µ–¥–∞–Ω–∏—è', sets: 5, reps: '3-6', intensity: '85-95%' },
                    { name: '–ñ–∏–º –ª–µ–∂–∞', sets: 5, reps: '3-6', intensity: '85-95%' },
                    { name: '–°—Ç–∞–Ω–æ–≤–∞—è —Ç—è–≥–∞', sets: 4, reps: '3-6', intensity: '85-95%' },
                    { name: '–ñ–∏–º —Å—Ç–æ—è', sets: 4, reps: '4-8', intensity: '75-85%' },
                    { name: '–ü–æ–¥—Ç—è–≥–∏–≤–∞–Ω–∏—è', sets: 4, reps: '5-10', intensity: '–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –≤–µ—Å + –æ—Ç—è–≥–æ—â–µ–Ω–∏–µ' }
                ]
            },
            {
                id: 3,
                name: '–°–†–¶3',
                direction: '–ñ–∏–º –ª–µ–∂–∞',
                gender: 'male',
                level: '–ù–∞—á–∞–ª—å–Ω—ã–π',
                period: '–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å',
                weightMin: 80,
                weightMax: null,
                weightHeightRatio: '–ù–æ—Ä–º–∞–ª—å–Ω–æ–µ',
                additionalInfo: '',
                exercises: [
                    { name: '–ñ–∏–º –ª–µ–∂–∞', sets: 4, reps: '8-12', intensity: '60-75%' },
                    { name: '–ñ–∏–º –Ω–∞ –Ω–∞–∫–ª–æ–Ω–Ω–æ–π —Å–∫–∞–º—å–µ', sets: 3, reps: '10-15', intensity: '50-65%' },
                    { name: '–û—Ç–∂–∏–º–∞–Ω–∏—è –Ω–∞ –±—Ä—É—Å—å—è—Ö', sets: 3, reps: '8-15', intensity: '–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –≤–µ—Å' },
                    { name: '–†–∞–∑–≤–æ–¥–∫–∞ –≥–∞–Ω—Ç–µ–ª–µ–π', sets: 3, reps: '12-20', intensity: '40-55%' },
                    { name: '–ñ–∏–º —É–∑–∫–∏–º —Ö–≤–∞—Ç–æ–º', sets: 3, reps: '8-12', intensity: '60-75%' }
                ]
            },
            {
                id: 4,
                name: '–°–†–¶4',
                direction: '–ê—Ä–º—Ä–µ—Å—Ç–ª–∏–Ω–≥',
                gender: 'male',
                level: 'II —Ä–∞–∑—Ä—è–¥ ‚Äì –ö–ú–°',
                period: '–°–∏–ª–æ–≤–æ–π',
                weightMin: 80,
                weightMax: null,
                weightHeightRatio: '–ù–æ—Ä–º–∞–ª—å–Ω–æ–µ',
                additionalInfo: '–°—Ç–∏–ª—å –±–æ—Ä—å–±—ã - –≤–µ—Ä—Ö.',
                exercises: [
                    { name: '–°—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è —Ç—è–≥–∞', sets: 4, reps: '5-8', intensity: '80-90%' },
                    { name: '–ú–æ–ª–æ—Ç–∫–æ–≤—ã–µ —Å–≥–∏–±–∞–Ω–∏—è', sets: 4, reps: '6-10', intensity: '70-85%' },
                    { name: '–ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–≥–∏–±–∞–Ω–∏—è', sets: 3, reps: '8-12', intensity: '60-75%' },
                    { name: '–û–±—Ä–∞—Ç–Ω—ã–µ —Å–≥–∏–±–∞–Ω–∏—è', sets: 3, reps: '8-12', intensity: '60-75%' },
                    { name: '–£–¥–µ—Ä–∂–∞–Ω–∏–µ –≤–µ—Å–∞', sets: 3, reps: '10-30 —Å–µ–∫', intensity: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è' }
                ]
            },
            {
                id: 5,
                name: '–°–†–¶5',
                direction: '–ñ–∏–º –ª–µ–∂–∞',
                gender: 'male',
                level: 'II —Ä–∞–∑—Ä—è–¥ ‚Äì –ö–ú–°',
                period: '–°–∏–ª–æ–≤–æ–π',
                weightMin: 80,
                weightMax: null,
                weightHeightRatio: '–ù–æ—Ä–º–∞–ª—å–Ω–æ–µ',
                additionalInfo: '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ –∂–∏–º—É —Å—Ç–æ—è',
                exercises: [
                    { name: '–ñ–∏–º –ª–µ–∂–∞', sets: 4, reps: '5-8', intensity: '80-90%' },
                    { name: '–ñ–∏–º —Å—Ç–æ—è', sets: 4, reps: '5-8', intensity: '80-90%' },
                    { name: '–ñ–∏–º –Ω–∞ –Ω–∞–∫–ª–æ–Ω–Ω–æ–π —Å–∫–∞–º—å–µ', sets: 3, reps: '6-10', intensity: '70-80%' },
                    { name: '–ñ–∏–º —Å–∏–¥—è', sets: 3, reps: '6-10', intensity: '70-80%' },
                    { name: '–†–∞–∑–≤–æ–¥–∫–∞ –≥–∞–Ω—Ç–µ–ª–µ–π', sets: 3, reps: '8-12', intensity: '60-75%' }
                ]
            },
            {
                id: 6,
                name: '–°–†–¶6',
                direction: '–ñ–∏–º –ª–µ–∂–∞',
                gender: 'male',
                level: '–ö–ú–° ‚Äì –ú–°',
                period: '–°–∏–ª–æ–≤–æ–π',
                weightMin: 80,
                weightMax: null,
                weightHeightRatio: '–ù–æ—Ä–º–∞–ª—å–Ω–æ–µ',
                additionalInfo: '',
                exercises: [
                    { name: '–ñ–∏–º –ª–µ–∂–∞', sets: 5, reps: '3-6', intensity: '85-95%' },
                    { name: '–ñ–∏–º –Ω–∞ –Ω–∞–∫–ª–æ–Ω–Ω–æ–π —Å–∫–∞–º—å–µ', sets: 4, reps: '4-8', intensity: '75-85%' },
                    { name: '–ñ–∏–º —É–∑–∫–∏–º —Ö–≤–∞—Ç–æ–º', sets: 4, reps: '4-8', intensity: '75-85%' },
                    { name: '–û—Ç–∂–∏–º–∞–Ω–∏—è –Ω–∞ –±—Ä—É—Å—å—è—Ö', sets: 3, reps: '6-12', intensity: '–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –≤–µ—Å + –æ—Ç—è–≥–æ—â–µ–Ω–∏–µ' },
                    { name: '–†–∞–∑–≤–æ–¥–∫–∞ –≥–∞–Ω—Ç–µ–ª–µ–π', sets: 3, reps: '8-15', intensity: '50-70%' }
                ]
            },
            {
                id: 7,
                name: '–°–†–¶7',
                direction: '–¢—Ä–æ–µ–±–æ—Ä—å–µ',
                gender: 'male',
                level: '–ú–° ‚Äì –ú–°–ú–ö',
                period: '–í—ã—Ö–æ–¥ –Ω–∞ –ø–∏–∫',
                weightMin: 80,
                weightMax: null,
                weightHeightRatio: '–ù–æ—Ä–º–∞–ª—å–Ω–æ–µ',
                additionalInfo: '',
                exercises: [
                    { name: '–ü—Ä–∏—Å–µ–¥–∞–Ω–∏—è', sets: 3, reps: '1-3', intensity: '90-100%' },
                    { name: '–ñ–∏–º –ª–µ–∂–∞', sets: 3, reps: '1-3', intensity: '90-100%' },
                    { name: '–°—Ç–∞–Ω–æ–≤–∞—è —Ç—è–≥–∞', sets: 2, reps: '1-3', intensity: '90-100%' },
                    { name: '–í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è', sets: 2, reps: '5-8', intensity: '70-80%' }
                ]
            },
            {
                id: 8,
                name: '–°–†–¶8',
                direction: '–ë–æ–¥–∏–±–∏–ª–¥–∏–Ω–≥',
                gender: 'male',
                level: '–°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å',
                period: '–ú–∞—Å—Å–æ–Ω–∞–±–æ—Ä',
                weightMin: 80,
                weightMax: null,
                weightHeightRatio: '–ù–æ—Ä–º–∞–ª—å–Ω–æ–µ',
                additionalInfo: '–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –º—ã—à–µ—á–Ω–æ–π –º–∞—Å—Å—ã. –ü—Ä–∏—Å—Ç–∞–ª—å–Ω–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –¥–∏–µ—Ç—É –∏ —Ä–µ–∂–∏–º.',
                exercises: [
                    { name: '–ñ–∏–º –ª–µ–∂–∞', sets: 4, reps: '8-12', intensity: '65-80%' },
                    { name: '–ü—Ä–∏—Å–µ–¥–∞–Ω–∏—è', sets: 4, reps: '8-12', intensity: '65-80%' },
                    { name: '–°—Ç–∞–Ω–æ–≤–∞—è —Ç—è–≥–∞', sets: 3, reps: '6-10', intensity: '70-85%' },
                    { name: '–ñ–∏–º —Å—Ç–æ—è', sets: 3, reps: '8-12', intensity: '60-75%' },
                    { name: '–ü–æ–¥—Ç—è–≥–∏–≤–∞–Ω–∏—è', sets: 3, reps: '8-15', intensity: '–°–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –≤–µ—Å' },
                    { name: '–ò–∑–æ–ª–∏—Ä—É—é—â–∏–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è', sets: 3, reps: '10-20', intensity: '50-70%' }
                ]
            }
        ];
    }

    async getAvailableCycles() {
        return this.cycles.map(cycle => ({
            id: cycle.id,
            name: cycle.name,
            direction: cycle.direction,
            level: cycle.level,
            period: cycle.period
        }));
    }

    async getCycleById(id) {
        return this.cycles.find(cycle => cycle.id === parseInt(id));
    }

    async getCyclesByCriteria(criteria) {
        return this.cycles.filter(cycle => {
            if (criteria.gender && cycle.gender !== criteria.gender) return false;
            if (criteria.level && !cycle.level.includes(criteria.level)) return false;
            if (criteria.direction && cycle.direction !== criteria.direction) return false;
            if (criteria.weight && cycle.weightMin && criteria.weight < cycle.weightMin) return false;
            if (criteria.weight && cycle.weightMax && criteria.weight > cycle.weightMax) return false;

            return true;
        });
    }

    getCycleDescription(cycle) {
        return `
üèãÔ∏è‚Äç‚ôÇÔ∏è ${cycle.name} - ${cycle.direction}
üìä –£—Ä–æ–≤–µ–Ω—å: ${cycle.level}
‚è±Ô∏è –ü–µ—Ä–∏–æ–¥: ${cycle.period}
‚öñÔ∏è –í–µ—Å: ${cycle.weightMin}+ –∫–≥
${cycle.additionalInfo ? `‚ÑπÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: ${cycle.additionalInfo}` : ''}
        `.trim();
    }

    getWorkoutPlan(cycle, userProfile) {
        const plan = {
            name: cycle.name,
            direction: cycle.direction,
            level: cycle.level,
            period: cycle.period,
            duration: this.getCycleDuration(cycle),
            frequency: this.getTrainingFrequency(cycle),
            exercises: cycle.exercises,
            notes: this.getCycleNotes(cycle, userProfile)
        };

        return plan;
    }

    getCycleDuration(cycle) {
        switch (cycle.period) {
        case '–°–∏–ª–æ–≤–æ–π':
            return '8-12 –Ω–µ–¥–µ–ª—å';
        case '–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å':
            return '6-10 –Ω–µ–¥–µ–ª—å';
        case '–í—ã—Ö–æ–¥ –Ω–∞ –ø–∏–∫':
            return '4-6 –Ω–µ–¥–µ–ª—å';
        case '–ú–∞—Å—Å–æ–Ω–∞–±–æ—Ä':
            return '12-16 –Ω–µ–¥–µ–ª—å';
        default:
            return '8-12 –Ω–µ–¥–µ–ª—å';
        }
    }

    getTrainingFrequency(cycle) {
        switch (cycle.direction) {
        case '–¢—Ä–æ–µ–±–æ—Ä—å–µ':
            return '3-4 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é';
        case '–ñ–∏–º –ª–µ–∂–∞':
            return '2-3 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é';
        case '–ê—Ä–º—Ä–µ—Å—Ç–ª–∏–Ω–≥':
            return '3-4 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é';
        case '–ë–æ–¥–∏–±–∏–ª–¥–∏–Ω–≥':
            return '4-6 —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é';
        default:
            return '3-4 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é';
        }
    }

    getCycleNotes(cycle, userProfile) {
        const notes = [];

        if (cycle.additionalInfo) {
            notes.push(cycle.additionalInfo);
        }

        if (userProfile.weight < cycle.weightMin) {
            notes.push(`‚ö†Ô∏è –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –Ω–∞–±—Ä–∞—Ç—å –≤–µ—Å –¥–æ ${cycle.weightMin} –∫–≥ –¥–ª—è –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤`);
        }

        if (cycle.period === '–ú–∞—Å—Å–æ–Ω–∞–±–æ—Ä') {
            notes.push('üçΩÔ∏è –û—Å–æ–±–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ –∫ –ø–∏—Ç–∞–Ω–∏—é –∏ —Ä–µ–∂–∏–º—É —Å–Ω–∞');
        }

        if (cycle.period === '–í—ã—Ö–æ–¥ –Ω–∞ –ø–∏–∫') {
            notes.push('üèÜ –ü–µ—Ä–∏–æ–¥ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è–º - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å');
        }

        return notes;
    }

    async getCycles() {
        // Return cycles from database if available, otherwise return static cycles
        try {
            if (this.db) {
                const cycles = await this.db.all('SELECT * FROM cycles ORDER BY id');
                return cycles;
            } else {
                console.log('Database not available, returning static cycles');
                return this.cycles;
            }
        } catch (error) {
            console.log('Database not available, returning static cycles');
            return this.cycles;
        }
    }
}

module.exports = CycleService;

